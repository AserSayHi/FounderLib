<?xml version="1.0" encoding="utf-8"?>
<components:PopupBox xmlns:fx="http://ns.adobe.com/mxml/2009"
					 xmlns:s="library://ns.adobe.com/flex/spark"
					 xmlns:mx="library://ns.adobe.com/flex/mx"
					 xmlns:components="com.pamakids.components.*"
					 skinClass="skins.GMPopupBoxSkin"
					 title="人才市场"
					 creationComplete="popupbox1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;

			import spark.components.Group;

			import controller.Help;
			import controller.ServiceController;

			import model.StaffVO;

			protected function tb1_clickHandler(event:MouseEvent):void
			{
				switch (event.currentTarget)
				{
					case tb1:
						currentState='s1';
						staffGroup.dataProvider=getStaffes(1);
						break;
					case tb2:
						staffGroup.dataProvider=getStaffes(2);
						currentState='s2';
						break;
					case tb3:
						staffGroup.dataProvider=getStaffes(3);
						currentState='s3';
						break;
				}
			}

			private var purchaseAC:ArrayCollection;

			protected function popupbox1_creationCompleteHandler(event:FlexEvent):void
			{
				staffGroup.dataProvider=getStaffes(1);
				currentState='s1';

				addEventListener('close', closeHandler);

				if (!ServiceController.instance.fighting)
					Help.instance.showHelp('请招聘采购员、收银员及理货员，签约即招聘成功');
			}

			private function getStaffes(type:int):ArrayCollection
			{
				var params:Array=ServiceController.instance.config.params;
				var q:int;
				var s:int;
				var r:int;

				var ac:ArrayCollection=new ArrayCollection();
				if (type == 1)
				{
					q=params[0];
					s=params[1];
					r=params[2];
				}
				else if (type == 2)
				{
					q=params[3];
					s=params[4];
					r=params[5];
				}
				else
				{
					q=params[7];
					s=params[8];
					r=params[9];
				}
				for (var i:int=1; i <= 3; i++)
				{
					var vo:StaffVO=new StaffVO();
					vo.type=type;
					vo.level=i;
					vo.salary=int(s * (1 + (i - 1) * r / 100));
					if (type == 1)
						vo.ability=int(q * (1 + (i - 1) * r / 100));
					else
						vo.ability=int((q * (1 + (4 - i - 1) * r / 100)) * 10) / 10;
					ac.addItem(vo);
				}
				return ac;
			}

			protected function closeHandler(event:Event):void
			{
				if (parent)
					(parent as Group).removeElement(this);
			}
		]]>
	</fx:Script>

	<components:states>
		<s:State name="s1"/>
		<s:State name="s2"/>
		<s:State name="s3"/>
	</components:states>

	<s:HGroup horizontalCenter="0"
			  y="15"
			  gap="18">
		<s:ToggleButton skinClass="skins.DefaultToggleButtonSkin"
						id="tb1"
						selected="{currentState=='s1'}"
						click="tb1_clickHandler(event)"
						label="采购员"/>
		<s:ToggleButton skinClass="skins.DefaultToggleButtonSkin"
						selected="{currentState=='s2'}"
						click="tb1_clickHandler(event)"
						id="tb2"
						label="收银员"/>
		<s:ToggleButton skinClass="skins.DefaultToggleButtonSkin"
						selected="{currentState=='s3'}"
						click="tb1_clickHandler(event)"
						id="tb3"
						label="理货员"/>
	</s:HGroup>

	<s:DataGroup id="staffGroup"
				 y="75"
				 horizontalCenter="0"
				 itemRenderer="renderers.StaffItem">
		<s:layout>
			<s:HorizontalLayout gap="0"/>
		</s:layout>
	</s:DataGroup>

</components:PopupBox>
